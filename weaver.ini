;;;
;;; if unmodified, this file is equivalent to:
;;; [@Default]
;;; [-Transformer]
;;; transformer = List
;;;


[@CorePrep]

[Name]
[Version]

; designate sections as being in the prelude by placing
; them within "=begin :prelude" ... "=end prelude"
[Region  / prelude]

[Generic / SYNOPSIS]
[Generic / DESCRIPTION]
[Generic / OVERVIEW]

; if you use an =foo command to start a section, it will
; be collected under the heading that uses that command
; and re-written with a proper POD header command.
[Collect / ATTRIBUTES]
command = attr
[Collect / METHODS]
command = method
[Collect / FUNCTIONS]
command = func

; this is for any sections that don't match any other
; sections specified in this config.
[Leftovers]

; postlude works like prelude
; really, you can make any regions you want!
[Region / postlude]

[Authors]
[Legal]


; transform "=begin :list" ... "=end :list"
; (or "=for :list") sections to proper POD
;  see docs for Pod::Elemental::Transformer::List
[-Transformer]
transformer = List


